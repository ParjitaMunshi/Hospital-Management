/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CommunityHistory;
import model.Doctor;
import model.DoctorHistory;
import model.Hospital;
import model.HospitalHistory;
import model.PatientHistory;

/**
 *
 * @author parjita
 */
public class PatientMainFrame extends javax.swing.JFrame {
       

    HospitalHistory hospitalHistory;
    DoctorHistory doctorHistory;
    PatientHistory patientHistory;
    CommunityHistory communityHistory;
    /**
     * Creates new form PatientMainPanel
     * @param hospitalHistory
     * @param doctorHistory
     */
    public PatientMainFrame(HospitalHistory hospitalHistory,DoctorHistory doctorHistory) {
        initComponents();
        this.hospitalHistory = hospitalHistory;
        this.doctorHistory = doctorHistory;
        this.patientHistory = patientHistory;
        this.communityHistory = communityHistory;
    }

    public PatientMainFrame() {
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HospitalCityText = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        HospitalTable = new javax.swing.JTable();
        HospitalIDText = new javax.swing.JTextField();
        SerachDoctor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        DoctorTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HospitalCityText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HospitalCityTextKeyReleased(evt);
            }
        });

        SearchBtn.setBackground(new java.awt.Color(255, 0, 255));
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("Search Hospital");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        HospitalTable.setBackground(new java.awt.Color(255, 0, 255));
        HospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Hospital ID", "Hospital Name"
            }
        ));
        jScrollPane1.setViewportView(HospitalTable);

        HospitalIDText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HospitalIDTextKeyReleased(evt);
            }
        });

        SerachDoctor.setBackground(new java.awt.Color(255, 0, 255));
        SerachDoctor.setForeground(new java.awt.Color(255, 255, 255));
        SerachDoctor.setText("Search Doctor");
        SerachDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerachDoctorActionPerformed(evt);
            }
        });

        DoctorTable.setBackground(new java.awt.Color(255, 0, 255));
        DoctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "DoctorID", "DoctorName", "Contact Number", "Email"
            }
        ));
        jScrollPane2.setViewportView(DoctorTable);

        jLabel1.setForeground(new java.awt.Color(255, 0, 255));
        jLabel1.setText("Enter City");

        jLabel2.setForeground(new java.awt.Color(255, 0, 255));
        jLabel2.setText("Enter Hospital ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 255));
        jLabel3.setText("Patient Dashboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(HospitalIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SerachDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HospitalCityText, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HospitalCityText, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HospitalIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SerachDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
       String HospitalCity = HospitalCityText.getText();
       for (Hospital H : hospitalHistory.getHistory()) {
        if (H.getHospitalCity().equals(HospitalCity)) {
              

            }
               
       }
       populateTable();
     
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void SerachDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerachDoctorActionPerformed
        // TODO add your handling code here:
        int HospitalID = Integer.parseInt(HospitalIDText.getText());
       
       for (Doctor D : doctorHistory.getHistory()) {
        if (HospitalID == D.getHospitalID()) {
            
          }
        }     
       populateTable1();
    }//GEN-LAST:event_SerachDoctorActionPerformed

    private void HospitalCityTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HospitalCityTextKeyReleased
        // TODO add your handling code here:
       String PATTERN = "^[a-zA-Z]{0,10}$";
       Pattern patt = Pattern.compile(PATTERN);
       Matcher match = patt.matcher(HospitalCityText.getText());

       if(!match.matches()){            
           JOptionPane.showMessageDialog(this,"Invalid ! Please Enter Valid Value ");
       }
    }//GEN-LAST:event_HospitalCityTextKeyReleased

    private void HospitalIDTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HospitalIDTextKeyReleased
        // TODO add your handling code here:
       String PATTERN = "^[0-9]{0,2}$";
       Pattern patt = Pattern.compile(PATTERN);
       Matcher match = patt.matcher(HospitalIDText.getText());

       if(!match.matches()){            
           JOptionPane.showMessageDialog(this,"Invalid ! Please Enter Valid Value ");
       }
    }//GEN-LAST:event_HospitalIDTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientMainFrame().setVisible(true);
            }      
          
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorTable;
    private javax.swing.JTextField HospitalCityText;
    private javax.swing.JTextField HospitalIDText;
    private javax.swing.JTable HospitalTable;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton SerachDoctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
          DefaultTableModel model = (DefaultTableModel) HospitalTable.getModel();
            model.setRowCount(0);

            for (Hospital H : hospitalHistory.getHistory()){

                   Object[] row = new Object[2];
                   row[0] = H.getHospitalID();
                   row[1] = H.getHospitalName();                   
                   model.addRow(row);
                 
            } 
    }

    private void populateTable1() {
            DefaultTableModel model = (DefaultTableModel) DoctorTable.getModel();
            model.setRowCount(0);

            for (Doctor D : doctorHistory.getHistory()){

                   Object[] row = new Object[4];
                   row[0] = D.getDoctorID();
                   row[1] = D.getDoctorName();
                   row[2] = D.getDoctorContactNumber();
                   row[3] = D.getDoctorEmailAddress();
                   
                  model.addRow(row);
                 
            } 
    }
}
