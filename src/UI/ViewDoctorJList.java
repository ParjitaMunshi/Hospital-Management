/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.DoctorHistory;

/**
 *
 * @author parjita
 */
public class ViewDoctorJList extends javax.swing.JPanel {

    DoctorHistory history;
    /**
     * Creates new form ViewDoctorJList
     * @param history
     */
    public ViewDoctorJList(DoctorHistory history) {
        initComponents();
          this.history = history;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DoctorTable = new javax.swing.JTable();
        DoctorDeleteBtn = new javax.swing.JButton();

        DoctorTable.setBackground(new java.awt.Color(255, 51, 255));
        DoctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "", "Doctor ID", "Name", "Hospital ID", "Contact Number", "Email Address"
            }
        ));
        jScrollPane1.setViewportView(DoctorTable);

        DoctorDeleteBtn.setBackground(new java.awt.Color(255, 0, 255));
        DoctorDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DoctorDeleteBtn.setText("Delete");
        DoctorDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorDeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DoctorDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DoctorDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DoctorDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorDeleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = DoctorTable.getSelectedRow();
       
       if (selectedRowIndex<0){           
           JOptionPane.showMessageDialog(this, "Please select a row to delete.");
           return;
       }
       
       DefaultTableModel model = (DefaultTableModel) DoctorTable.getModel();
       Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex,0);
       history.deleteDoctor(selectedDoctor);
       JOptionPane.showMessageDialog(this, "Doctor signs delete.");
       
       populateTable();
    }//GEN-LAST:event_DoctorDeleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DoctorDeleteBtn;
    private javax.swing.JTable DoctorTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
         DefaultTableModel model = (DefaultTableModel) DoctorTable.getModel();
            model.setRowCount(0);

            for (Doctor D : history.getHistory()){

                   Object[] row = new Object[6];
                   row[0] = D;
                   row[1] = D.getDoctorID();
                   row[2] = D.getDoctorName();
                   row[3] = D.getHospitalID();
                   row[4] = D.getDoctorEmailAddress();
                   row[5] = D.getDoctorContactNumber();
                   
                   model.addRow(row);
                 
            } 
    }

    
}
