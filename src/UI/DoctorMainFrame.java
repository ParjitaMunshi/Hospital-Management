/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CommunityHistory;
import model.DoctorHistory;
import model.HospitalHistory;
import model.Patient;
import model.PatientHistory;
import model.Vitals;
import model.VitalsHistory;

/**
 *
 * @author parjita
 */
public class DoctorMainFrame extends javax.swing.JFrame {

    PatientHistory patientHistory;
    VitalsHistory vitalsHistory;
    CommunityHistory communityHistory;
    HospitalHistory hospitalHistory;
    DoctorHistory doctorHistory;
    /**
     * Creates new form DoctorMainFram
     * @param patientHistory
     * @param vitalsHistory
     */
    public DoctorMainFrame(PatientHistory patientHistory,VitalsHistory vitalsHistory) {
        initComponents();
        this.patientHistory = patientHistory;
        this.vitalsHistory = vitalsHistory;
        this.hospitalHistory = hospitalHistory;
        this.communityHistory = communityHistory;
        this.doctorHistory = doctorHistory;
    }

    public DoctorMainFrame() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientsearchBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        PatientIDText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BodyTempText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        DiagnoseBtn = new javax.swing.JButton();
        CreatePatient = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        BloodPressureText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        HeartRateText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatientTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        VitalsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patientsearchBtn.setBackground(new java.awt.Color(255, 0, 255));
        patientsearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        patientsearchBtn.setText("Search");
        patientsearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientsearchBtnActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 0, 255));
        jLabel4.setText("Patient ID");

        PatientIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientIDTextActionPerformed(evt);
            }
        });
        PatientIDText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PatientIDTextKeyReleased(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 0, 255));
        jLabel6.setText("Body Temperature");

        BodyTempText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BodyTempTextKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Add Vitals");

        DiagnoseBtn.setBackground(new java.awt.Color(255, 0, 255));
        DiagnoseBtn.setForeground(new java.awt.Color(255, 255, 255));
        DiagnoseBtn.setText("Diagonse");
        DiagnoseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnoseBtnActionPerformed(evt);
            }
        });

        CreatePatient.setBackground(new java.awt.Color(255, 0, 255));
        CreatePatient.setForeground(new java.awt.Color(255, 255, 255));
        CreatePatient.setText("Create Patient");
        CreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatePatientActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 0, 255));
        jLabel8.setText("Blood Pressure");

        BloodPressureText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloodPressureTextActionPerformed(evt);
            }
        });
        BloodPressureText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BloodPressureTextKeyReleased(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 0, 255));
        jLabel2.setText("Heart Rate");

        HeartRateText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HeartRateTextKeyReleased(evt);
            }
        });

        PatientTable1.setBackground(new java.awt.Color(255, 0, 255));
        PatientTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Gender", "Age", "Height", "Weight", "Blood Group", "Address", "City", "Occupation", "Email Id", "Phone Number"
            }
        ));
        jScrollPane2.setViewportView(PatientTable1);

        VitalsTable.setBackground(new java.awt.Color(255, 0, 255));
        VitalsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "Blood Pressure", "Heart Rate", "Body Temprature"
            }
        ));
        jScrollPane1.setViewportView(VitalsTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Doctor Dashboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PatientIDText)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(197, 197, 197)
                                .addComponent(patientsearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(CreatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(BodyTempText, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                    .addComponent(BloodPressureText)
                                    .addComponent(HeartRateText)
                                    .addComponent(DiagnoseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(291, 291, 291))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 991, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CreatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientsearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BodyTempText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BloodPressureText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HeartRateText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(DiagnoseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DiagnoseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagnoseBtnActionPerformed
        // TODO add your handling code here:        
        int PatientID = Integer.parseInt(PatientIDText.getText());
        int BloodPressure  =  Integer.parseInt(BloodPressureText.getText());
        int HeartRate  =  Integer.parseInt(HeartRateText.getText());
        int BodyTemperature  =  Integer.parseInt(BodyTempText.getText());

        Vitals V = vitalsHistory.addNewVitals();
        V.setPatientID(PatientID);
        V.setBloodPressure(BloodPressure);
        V.setHeartRate(HeartRate);
        V.setBodyTemperature(BodyTemperature);

        JOptionPane.showMessageDialog(this,"Patient is in Serious Condition");

        PatientIDText.setText("");
        BloodPressureText.setText("");
        HeartRateText.setText("");
        BodyTempText.setText("");
        
        populateTable1();
    }//GEN-LAST:event_DiagnoseBtnActionPerformed

    private void PatientIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientIDTextActionPerformed

    private void patientsearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientsearchBtnActionPerformed
        // TODO add your handling code here:
       int PatientID = Integer.parseInt(PatientIDText.getText());
       
       for (Patient P : patientHistory.getHistory()) {
        if (PatientID == P.getPatientID()) {
            populateTable();
        }
       }
    }//GEN-LAST:event_patientsearchBtnActionPerformed

    private void CreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatePatientActionPerformed
        // TODO add your handling code here:
           PatientFrame frame = new PatientFrame(patientHistory,hospitalHistory,doctorHistory,communityHistory);
           frame.setVisible(true);
           dispose();
    }//GEN-LAST:event_CreatePatientActionPerformed

    private void BloodPressureTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloodPressureTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BloodPressureTextActionPerformed

    private void PatientIDTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PatientIDTextKeyReleased
        // TODO add your handling code here:
       String PATTERN = "^[0-9]{0,2}$";
       Pattern patt = Pattern.compile(PATTERN);
       Matcher match = patt.matcher(PatientIDText.getText());

       if(!match.matches()){            
           JOptionPane.showMessageDialog(this,"Invalid ! Please Enter Valid Value ");
       }
    }//GEN-LAST:event_PatientIDTextKeyReleased

    private void BodyTempTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BodyTempTextKeyReleased
        // TODO add your handling code here:
       String PATTERN = "^[0-9]{0,2}$";
       Pattern patt = Pattern.compile(PATTERN);
       Matcher match = patt.matcher(BodyTempText.getText());

       if(!match.matches()){            
           JOptionPane.showMessageDialog(this,"Invalid ! Please Enter Valid Value ");
       }
    }//GEN-LAST:event_BodyTempTextKeyReleased

    private void BloodPressureTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BloodPressureTextKeyReleased
        // TODO add your handling code here:
       String PATTERN = "^[0-9]{0,2}$";
       Pattern patt = Pattern.compile(PATTERN);
       Matcher match = patt.matcher(BloodPressureText.getText());

       if(!match.matches()){            
           JOptionPane.showMessageDialog(this,"Invalid ! Please Enter Valid Value ");
       }
    }//GEN-LAST:event_BloodPressureTextKeyReleased

    private void HeartRateTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HeartRateTextKeyReleased
        // TODO add your handling code here:
       String PATTERN = "^[0-9]{0,2}$";
       Pattern patt = Pattern.compile(PATTERN);
       Matcher match = patt.matcher(HeartRateText.getText());

       if(!match.matches()){            
           JOptionPane.showMessageDialog(this,"Invalid ! Please Enter Valid Value ");
       }
    }//GEN-LAST:event_HeartRateTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BloodPressureText;
    private javax.swing.JTextField BodyTempText;
    private javax.swing.JButton CreatePatient;
    private javax.swing.JButton DiagnoseBtn;
    private javax.swing.JTextField HeartRateText;
    private javax.swing.JTextField PatientIDText;
    private javax.swing.JTable PatientTable1;
    private javax.swing.JTable VitalsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton patientsearchBtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
          DefaultTableModel model = (DefaultTableModel) PatientTable1.getModel();
            model.setRowCount(0);
           
            for (Patient h : patientHistory.getHistory()){

                   Object[] row = new Object[9];
                   row[0] = h.getPatientID();
                   row[1] = h.getPatientName();                   
                   row[2] = h.getPatientGender();
                   row[3] = h.getPatientAge();
                   row[4] = h.getPatientHeight();
                   row[5] = h.getPatientWeight();
                   row[6] = h.getPatientAddress();
                   row[7] = h.getPatientEmail();
                   row[8] = h.getPatientPhoneNumber();                                      
                   
                   model.addRow(row);
            }  
           
    }

    private void populateTable1() {
        DefaultTableModel model = (DefaultTableModel) VitalsTable.getModel();
            model.setRowCount(0);

            for (Vitals V : vitalsHistory.getHistory()){

                   Object[] row = new Object[4];
                   row[0] = V.getPatientID();
                   row[1] = V.getBloodPressure();
                   row[2] = V.getHeartRate();
                   row[3] = V.getBodyTemperature();
                   
                   
                   model.addRow(row);
            }
    }
}
